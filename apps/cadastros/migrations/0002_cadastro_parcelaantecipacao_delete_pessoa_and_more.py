# Generated by Django 5.1.3 on 2025-09-11 12:54

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cadastros', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cadastro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_pessoa', models.CharField(choices=[('PF', 'Pessoa Física'), ('PJ', 'Pessoa Jurídica')], default='PF', max_length=2)),
                ('cpf', models.CharField(blank=True, db_index=True, max_length=11, verbose_name='CPF')),
                ('cnpj', models.CharField(blank=True, db_index=True, max_length=14, verbose_name='CNPJ')),
                ('rg', models.CharField(blank=True, max_length=20, verbose_name='RG')),
                ('orgao_expedidor', models.CharField(blank=True, max_length=20, verbose_name='Órgão Expedidor')),
                ('nome_razao_social', models.CharField(max_length=180, verbose_name='Nome/Razão Social')),
                ('nome_completo', models.CharField(blank=True, max_length=180, verbose_name='Nome completo')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de nascimento')),
                ('profissao', models.CharField(blank=True, max_length=120, verbose_name='Profissão')),
                ('estado_civil', models.CharField(blank=True, choices=[('SOLTEIRO', 'Solteiro(a)'), ('CASADO', 'Casado(a)'), ('DIVORCIADO', 'Divorciado(a)'), ('VIUVO', 'Viúvo(a)'), ('UNIAO_ESTAVEL', 'União Estável')], max_length=20, verbose_name='Estado civil')),
                ('cep', models.CharField(blank=True, max_length=8, verbose_name='CEP')),
                ('endereco', models.CharField(blank=True, max_length=180, verbose_name='Endereço')),
                ('numero', models.CharField(blank=True, max_length=10, verbose_name='Nº')),
                ('complemento', models.CharField(blank=True, max_length=60, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=80, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=80, verbose_name='Cidade')),
                ('uf', models.CharField(blank=True, max_length=2, verbose_name='UF')),
                ('banco', models.CharField(blank=True, max_length=120, verbose_name='Banco')),
                ('agencia', models.CharField(blank=True, max_length=15, verbose_name='Agência')),
                ('conta', models.CharField(blank=True, max_length=20, verbose_name='Conta')),
                ('tipo_conta', models.CharField(blank=True, choices=[('CC', 'Conta Corrente'), ('PP', 'Poupança')], max_length=2, verbose_name='Tipo de Conta')),
                ('chave_pix', models.CharField(blank=True, max_length=120, verbose_name='Chave Pix')),
                ('celular', models.CharField(blank=True, max_length=20, verbose_name='Celular')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('orgao_publico', models.CharField(blank=True, max_length=120, verbose_name='Órgão Público')),
                ('situacao_servidor', models.CharField(blank=True, choices=[('EFETIVO', 'Efetivo'), ('COMISSIONADO', 'Comissionado'), ('APOSENTADO', 'Aposentado'), ('OUTRO', 'Outro')], max_length=20, verbose_name='Situação do Servidor')),
                ('matricula_servidor', models.CharField(db_index=True, max_length=30, verbose_name='Matrícula do Servidor Público')),
                ('valor_bruto_total', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor Bruto Total')),
                ('valor_liquido', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor Líquido (contra-cheque)')),
                ('prazo_antecipacao_meses', models.PositiveSmallIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Prazo de Antecipação (meses)')),
                ('trinta_porcento_bruto', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='30% do Bruto')),
                ('margem_liquido_menos_30_bruto', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Margem (Líquido - 30% do Bruto)')),
                ('mensalidade_associativa', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Mensalidade Associativa (R$)')),
                ('taxa_antecipacao_percent', models.DecimalField(decimal_places=2, default=Decimal('30.00'), max_digits=5, verbose_name='Taxa de Antecipação (%)')),
                ('disponivel', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Disponível (R$)')),
                ('valor_total_antecipacao', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Valor Total Antecipação (R$)')),
                ('data_aprovacao', models.DateField(blank=True, null=True, verbose_name='Data da Aprovação')),
                ('data_primeira_mensalidade', models.DateField(blank=True, null=True, verbose_name='Data da primeira mensalidade')),
                ('mes_averbacao', models.CharField(blank=True, max_length=7, verbose_name='Mês de Averbação (AAAA-MM)')),
                ('doacao_associado', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Doação do Associado (R$)')),
                ('agente_padrao', models.BooleanField(default=False, verbose_name='Agente Padrão')),
                ('auxilio_agente_taxa_percent', models.DecimalField(decimal_places=2, default=Decimal('10.00'), max_digits=5, verbose_name='Auxílio do Agente (%)')),
                ('data_envio', models.DateField(blank=True, null=True, verbose_name='Data do Envio')),
                ('status', models.CharField(choices=[('DRAFT', 'Rascunho'), ('SENT_REVIEW', 'Enviado para análise'), ('PENDING_AGENT', 'Pendência com agente'), ('RESUBMITTED', 'Reenviado pelo agente'), ('APPROVED_REVIEW', 'Aprovado em análise'), ('PAYMENT_PENDING', 'Pendente de pagamento'), ('EFFECTIVATED', 'Efetivado'), ('CANCELLED', 'Cancelado')], db_index=True, default='DRAFT', max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('agente_responsavel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cadastros', to=settings.AUTH_USER_MODEL, verbose_name='Agente Responsável')),
                ('cadastro_anterior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='renovacoes', to='cadastros.cadastro')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ParcelaAntecipacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)], verbose_name='Nº Mensalidade')),
                ('valor', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Valor (R$)')),
                ('vencimento', models.DateField(blank=True, null=True, verbose_name='Vencimento')),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('LIQUIDADA', 'Liquidada')], default='PENDENTE', max_length=12, verbose_name='Status')),
                ('cadastro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parcelas', to='cadastros.cadastro')),
            ],
            options={
                'ordering': ['numero'],
            },
        ),
        migrations.DeleteModel(
            name='Pessoa',
        ),
        migrations.AddIndex(
            model_name='cadastro',
            index=models.Index(fields=['cpf'], name='cadastros_c_cpf_19f610_idx'),
        ),
        migrations.AddIndex(
            model_name='cadastro',
            index=models.Index(fields=['cnpj'], name='cadastros_c_cnpj_c3baed_idx'),
        ),
        migrations.AddIndex(
            model_name='cadastro',
            index=models.Index(fields=['matricula_servidor'], name='cadastros_c_matricu_23cb46_idx'),
        ),
        migrations.AddIndex(
            model_name='cadastro',
            index=models.Index(fields=['status'], name='cadastros_c_status_892936_idx'),
        ),
        migrations.AddIndex(
            model_name='cadastro',
            index=models.Index(fields=['created_at'], name='cadastros_c_created_3da01e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='parcelaantecipacao',
            unique_together={('cadastro', 'numero')},
        ),
    ]
